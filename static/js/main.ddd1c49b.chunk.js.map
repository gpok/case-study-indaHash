{"version":3,"sources":["Pages/Homepage/Components/EmployeesMosaic/EmployeesMosaic.tsx","Pages/Homepage/Mockups/EmployeesList.ts","Pages/Homepage/Components/EmployeesMosaic/index.ts","Pages/Homepage/Components/Slider/Slider.tsx","Pages/Homepage/Homepage.tsx","Pages/Homepage/index.ts","Pages/App.tsx","serviceWorker.ts","index.tsx"],"names":["EmployeesMosaic","employees","onClick","className","map","employee","key","id","type","style","backgroundImage","profileImage","undefined","profileImageFiltered","href","email","viewBox","d","fullName","position","location","xmlns","values","in","result","tableValues","defaultProps","EmployeeLocation","EmployeePosition","EmployeeImages","EmployeeFilteredImages","EmployeesList","warsaw","founder","p4","p3","headofHumanResources","p2","london","chiefGrowthOfficer","p1","businessDevelopment","p0","loasAngeles","businessDevelopmentDirectorUS","chiefBusinessDevelopmentOfficer","internationalClientServiceManager","creationManager","headOfCommunication","SwiperClass","use","Controller","Slider","slides","visible","onClose","sliderRef","useRef","useState","controlledSwiper","setControlledSwiper","useEffect","selected","filter","slide","pop","slideTo","indexOf","Navigation","slideNext","slidePrev","CSSTransition","nodeRef","classNames","appear","timeout","ref","slidesPerView","loop","onSwiper","controller","control","simulateTouch","header","content","Homepage","selectedEmployee","setSelectedEmployee","getSlidesCallback","useCallback","App","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ddd1c49b.chunk.js","sourcesContent":["import React from 'react';\nimport { IEmployee } from './IEmployee';\nimport './EmployeesMosaic.scss';\n\ninterface IEmployeesMosaicProps{\n  employees: IEmployee[],\n  onClick?: (employee: IEmployee) => void\n}\n\nconst EmployeesMosaic = ({ employees, onClick }: IEmployeesMosaicProps) => (\n  <div className=\"employees-mosaic\">\n    {employees.map((employee) => (\n      <div key={employee.id} className=\"employees-mosaic__employee\">\n        <button\n          type=\"button\"\n          className=\"employees-mosaic__employee__profile\"\n          onClick={() => {\n            if (onClick) onClick(employee);\n          }}\n        >\n          <div\n            className=\"employees-mosaic__employee__profile__image\"\n            style={{\n              backgroundImage: employee.profileImage\n                ? `url('${employee.profileImage}')`\n                : undefined,\n            }}\n          />\n          <div\n            className=\"employees-mosaic__employee__profile__image--filter\"\n            style={{\n              backgroundImage: employee.profileImageFiltered\n                ? `url('${employee.profileImageFiltered}')`\n                : undefined,\n            }}\n          />\n        </button>\n\n        <a\n          href={employee.email ? `mailto:${employee.email}` : '#'}\n          className=\"employees-mosaic__employee__mail\"\n        >\n          <svg viewBox=\"0 0 100 110\">\n            <path\n              className=\"employees-mosaic__employee__mail__back\"\n              d=\"\n                M 0 40\n                L 0 100\n                L 100 100\n                L 100 40\n                Z\n              \"\n            />\n            <path\n              className=\"employees-mosaic__employee__mail__top\"\n              d=\"\n                M 0 40\n                L 100 40\n                L 50 80\n                Z\n              \"\n            />\n            <path\n              className=\"employees-mosaic__employee__mail__bottom\"\n              d=\"\n                M 0 50\n                L 0 110\n                L 100 110\n                L 100 50\n                L 50 90\n                Z\n              \"\n            />\n          </svg>\n        </a>\n        <div className=\"employees-mosaic__employee__name\">\n          {employee.fullName}\n        </div>\n        <div className=\"employees-mosaic__employee__position\">\n          {employee.position}\n        </div>\n        <div className=\"employees-mosaic__employee__location\">\n          {employee.location}\n        </div>\n\n      </div>\n    ))}\n    <svg id=\"employee-filter-svg\" xmlns=\"http://www.w3.org/2000/svg\">\n      <filter id=\"employeeFilter\">\n        <feColorMatrix type=\"saturate\" values=\"0.0\" />\n        <feColorMatrix\n          type=\"matrix\"\n          values=\"\n            1.1 0 0 0 0.1\n            0 1.1 0 0 0.1\n            0 0 1.1 0 0.1\n            0 0 0 1 0\n          \"\n        />\n        <feComponentTransfer in=\"colormatrix\" result=\"componentTransfer\">\n          <feFuncR type=\"table\" tableValues=\"0.14 0.26\" />\n          <feFuncG type=\"table\" tableValues=\"0.35 0.76\" />\n          <feFuncB type=\"table\" tableValues=\"0.49 0.87\" />\n          <feFuncA type=\"table\" tableValues=\"0 1\" />\n        </feComponentTransfer>\n        <feColorMatrix\n          type=\"matrix\"\n          values=\"\n            1.2 0 0 0 -0.12\n            0 1.2 0 0 -0.12\n            0 0 1.2 0 -0.12\n            0 0 0 1 0\n          \"\n        />\n      </filter>\n    </svg>\n  </div>\n);\nEmployeesMosaic.defaultProps = {};\n\nexport default EmployeesMosaic;\n","import { IEmployee } from '../Components/EmployeesMosaic';\n\nexport enum EmployeeLocation {\n  warsaw = 'Warsaw',\n  london = 'London',\n  loasAngeles = 'Los Angeles',\n}\n\nexport enum EmployeePosition {\n  headOfCommunication = 'Head of Communication',\n  creationManager = 'Creation Manager',\n  internationalClientServiceManager = 'International Client Service Manager',\n  chiefBusinessDevelopmentOfficer = 'Chief Business Development Officer (CBDO)',\n  businessDevelopmentDirectorUS = 'Business Development Director US',\n  businessDevelopment = 'Business Development',\n  chiefGrowthOfficer = 'Chief Growth Officer (CGO)',\n  headofHumanResources = 'Head of Human Resources',\n  founder = 'Founder'\n}\n\nexport enum EmployeeImages {\n  p0 = 'images/team/person_0.png',\n  p1 = 'images/team/person_1.png',\n  p2 = 'images/team/person_2.png',\n  p3 = 'images/team/person_3.png',\n  p4 = 'images/team/person_4.png',\n}\nexport enum EmployeeFilteredImages {\n  p0 = 'images/team/person_0_filtered.png',\n  p1 = 'images/team/person_1_filtered.png',\n  p2 = 'images/team/person_2_filtered.png',\n  p3 = 'images/team/person_3_filtered.png',\n  p4 = 'images/team/person_4_filtered.png',\n}\n\nconst employeeBackgroundImage = 'images/slider_bg.png';\n\nconst EmployeesList: IEmployee[] = [\n  {\n    id: 0,\n    fullName: 'Basia Sołtysińska',\n    location: EmployeeLocation.warsaw,\n    position: EmployeePosition.founder,\n    profileImage: EmployeeImages.p4,\n    profileImageFiltered: EmployeeFilteredImages.p4,\n    backgroundImage: employeeBackgroundImage,\n    email: 'bs@test.pl',\n  },\n  {\n    id: 1,\n    fullName: 'Włas Chorowiec',\n    location: EmployeeLocation.warsaw,\n    position: EmployeePosition.founder,\n    profileImage: EmployeeImages.p3,\n    profileImageFiltered: EmployeeFilteredImages.p3,\n    backgroundImage: employeeBackgroundImage,\n    email: 'wc@test.pl',\n  },\n  {\n    id: 2,\n    fullName: 'Edyta Leśniewska',\n    location: EmployeeLocation.warsaw,\n    position: EmployeePosition.headofHumanResources,\n    profileImage: EmployeeImages.p2,\n    profileImageFiltered: EmployeeFilteredImages.p2,\n    backgroundImage: employeeBackgroundImage,\n    email: 'el@test.pl',\n  },\n  {\n    id: 3,\n    fullName: 'Joanna Pawluk',\n    location: EmployeeLocation.london,\n    position: EmployeePosition.chiefGrowthOfficer,\n    profileImage: EmployeeImages.p1,\n    profileImageFiltered: EmployeeFilteredImages.p1,\n    backgroundImage: employeeBackgroundImage,\n    email: 'jp@test.pl',\n  },\n  {\n    id: 4,\n    fullName: 'David Saunders',\n    location: EmployeeLocation.london,\n    position: EmployeePosition.businessDevelopment,\n    profileImage: EmployeeImages.p0,\n    profileImageFiltered: EmployeeFilteredImages.p0,\n    backgroundImage: employeeBackgroundImage,\n    email: 'ds@test.pl',\n  },\n  {\n    id: 5,\n    fullName: 'Adam Eldridge',\n    location: EmployeeLocation.loasAngeles,\n    position: EmployeePosition.businessDevelopmentDirectorUS,\n    profileImage: EmployeeImages.p4,\n    profileImageFiltered: EmployeeFilteredImages.p4,\n    backgroundImage: employeeBackgroundImage,\n    email: 'ae@test.pl',\n  },\n  {\n    id: 6,\n    fullName: 'Maha Mahda',\n    location: EmployeeLocation.warsaw,\n    position: EmployeePosition.chiefBusinessDevelopmentOfficer,\n    profileImage: EmployeeImages.p3,\n    profileImageFiltered: EmployeeFilteredImages.p3,\n    backgroundImage: employeeBackgroundImage,\n    email: 'mm@test.pl',\n  },\n  {\n    id: 7,\n    fullName: 'Elżbieta Kamińska',\n    location: EmployeeLocation.warsaw,\n    position: EmployeePosition.internationalClientServiceManager,\n    profileImage: EmployeeImages.p2,\n    profileImageFiltered: EmployeeFilteredImages.p2,\n    backgroundImage: employeeBackgroundImage,\n    email: 'ek@test.pl',\n  },\n  {\n    id: 8,\n    fullName: 'Karolina Makuch',\n    location: EmployeeLocation.warsaw,\n    position: EmployeePosition.creationManager,\n    profileImage: EmployeeImages.p1,\n    profileImageFiltered: EmployeeFilteredImages.p1,\n    backgroundImage: employeeBackgroundImage,\n    email: 'km@test.pl',\n  },\n  {\n    id: 9,\n    fullName: 'Kamil Bolek',\n    location: EmployeeLocation.warsaw,\n    position: EmployeePosition.headOfCommunication,\n    profileImage: EmployeeImages.p0,\n    profileImageFiltered: EmployeeFilteredImages.p0,\n    backgroundImage: employeeBackgroundImage,\n    email: 'kb@test.pl',\n  },\n];\n\nexport default EmployeesList;\n","import EmployeesMosaic from './EmployeesMosaic';\nimport { IEmployee as IEmployeeT } from './IEmployee';\n\nexport default EmployeesMosaic;\nexport type IEmployee = IEmployeeT;\n","import React, { useRef, useState, useEffect } from 'react';\nimport { Swiper, SwiperSlide } from 'swiper/react';\nimport { Swiper as SwiperClass, Controller } from 'swiper';\nimport 'swiper/swiper.scss';\nimport { CSSTransition } from 'react-transition-group';\nimport './Slider.scss';\n// import { SwiperComponent } from 'swiper/types/shared';\nimport { ISlide } from './ISlide';\n\ninterface ISliderProps{\n  slides: ISlide[],\n  visible: boolean,\n  onClose: () => void\n}\n\nSwiperClass.use([Controller]);\n\nconst Slider = ({ slides, visible, onClose }: ISliderProps) => {\n  const sliderRef = useRef<HTMLDivElement>(null);\n  const [controlledSwiper, setControlledSwiper] = useState<SwiperClass>();\n  useEffect(() => {\n    const selected = slides.filter((slide) => slide.selected).pop();\n    if (controlledSwiper && selected) {\n      controlledSwiper.slideTo(slides.indexOf(selected) + 1, 0);\n    }\n  }, [controlledSwiper, slides]);\n\n  const Navigation = (\n    <>\n      <button\n        type=\"button\"\n        className=\"slider__next\"\n        onClick={() => {\n              controlledSwiper?.slideNext();\n        }}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42 71\">\n          <path d=\"M9.12,3.18L41,36L9.29,67.71c-1.24,1.24-3.26,1.16-4.4-0.17l-2.05-2.39c-1.03-1.21-0.95-3.01,0.2-4.11L29,36L3.05,9.12 C1.91,7.94,1.93,6.07,3.08,4.92l1.76-1.76C6.03,1.97,7.95,1.98,9.12,3.18z\" />\n        </svg>\n      </button>\n      <button\n        type=\"button\"\n        className=\"slider__prev\"\n        onClick={() => {\n              controlledSwiper?.slidePrev();\n        }}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 42 71\">\n          <path d=\"M34,3.18L2.12,36l31.71,31.71c1.24,1.24,3.26,1.16,4.4-0.17l2.05-2.39c1.03-1.21,0.95-3.01-0.2-4.11L14.12,36L40.07,9.12 c1.14-1.18,1.12-3.05-0.04-4.21l-1.76-1.76C37.09,1.97,35.16,1.98,34,3.18z\" />\n        </svg>\n      </button>\n      <button\n        type=\"button\"\n        className=\"slider__exit\"\n        onClick={() => {\n          if (onClose) onClose();\n        }}\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 59 59\">\n          <path d=\"M15.83,3.83L29.5,17.5L43.17,3.83c1.56-1.56,4.09-1.56,5.66,0l6.34,6.34c1.56,1.56,1.56,4.09,0,5.66L41.5,29.5l13.67,13.67 c1.56,1.56,1.56,4.09,0,5.66l-6.34,6.34c-1.56,1.56-4.09,1.56-5.66,0L29.5,41.5L15.83,55.17c-1.56,1.56-4.09,1.56-5.66,0l-6.34-6.34 c-1.56-1.56-1.56-4.09,0-5.66L17.5,29.5L3.83,15.83c-1.56-1.56-1.56-4.09,0-5.66l6.34-6.34C11.73,2.27,14.27,2.27,15.83,3.83z\" />\n        </svg>\n      </button>\n    </>\n  );\n\n  return (\n    <CSSTransition\n      nodeRef={sliderRef}\n      classNames=\"slider-wrapper\"\n      className=\"slider-wrapper\"\n      appear\n      in={visible}\n      timeout={600}\n    >\n      <div ref={sliderRef}>\n        <Swiper\n          className=\"slider\"\n          slidesPerView={1}\n          loop\n          onSwiper={setControlledSwiper}\n          controller={{ control: controlledSwiper }}\n          simulateTouch={false}\n        >\n          {slides.map((slide) => (\n            <SwiperSlide\n              key={slide.key}\n              style={{ backgroundImage: slide.backgroundImage ? `url('${slide.backgroundImage}')` : undefined }}\n              className=\"slider__slide\"\n            >\n              <div className=\"slider__slide__data\">\n                <span className=\"slider__slide__data__header\">\n                  {slide.header}\n                </span>\n                <span className=\"slider__slide__data__content\">\n                  {slide.content}\n                </span>\n              </div>\n            </SwiperSlide>\n          ))}\n          {Navigation}\n        </Swiper>\n      </div>\n    </CSSTransition>\n  );\n};\nSlider.defaultProps = {};\n\nexport default Slider;\n","import React, { useState, useCallback } from 'react';\nimport EmployeesMosaic from './Components/EmployeesMosaic';\nimport EmployeesList from './Mockups/EmployeesList';\nimport './Homepage.scss';\nimport Slider from './Components/Slider/Slider';\nimport { IEmployee } from './Components/EmployeesMosaic/IEmployee';\nimport { ISlide } from './Components/Slider';\n\nconst Homepage = () => {\n  const [selectedEmployee, setSelectedEmployee] = useState<IEmployee|false>(false);\n\n  const getSlidesCallback = useCallback(\n    (): ISlide[] => EmployeesList.map(\n      (employee):ISlide => ({\n        key: employee.id,\n        header: employee.position,\n        content: employee.fullName,\n        selected: selectedEmployee ? selectedEmployee.id === employee.id : false,\n        backgroundImage: employee.backgroundImage,\n      }),\n    ),\n    [selectedEmployee],\n  );\n\n  return (\n    <div className=\"homepage\">\n      <div className=\"homepage_wrapper\">\n        <h1 className=\"homepage__header\">Meet our team</h1>\n        <EmployeesMosaic\n          employees={EmployeesList}\n          onClick={(employee) => {\n            setSelectedEmployee(employee);\n          }}\n        />\n        <Slider\n          visible={selectedEmployee !== false}\n          slides={getSlidesCallback()}\n          onClose={() => {\n            setSelectedEmployee(false);\n          }}\n        />\n      </div>\n    </div>\n  );\n};\nHomepage.defaultProps = {};\n\nexport default Homepage;\n","import Homepage from './Homepage';\n\nexport default Homepage;\n","import React from 'react';\nimport './App.scss';\nimport Homepage from './Homepage';\n\nfunction App() {\n  return (\n    <div className=\"app\" style={{ backgroundImage: \"url('images/bg.png')\" }}>\n      <Homepage />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Pages/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}